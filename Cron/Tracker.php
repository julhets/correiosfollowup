<?php

/**
 * JulioReis_CorreiosFollowup
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  JulioReis
 * @package   JulioReis_CorreiosFollowup
 *
 * @copyright Copyright (c) 2018 Julio Reis (www.rapidets.com.br)
 *
 * @author    Julio Reis <julioreis.si@gmail.com>
 */

namespace JulioReis\CorreiosFollowup\Cron;

use JulioReis\CorreiosFollowup\Model\Context as ModuleContext;
use Magento\Cron\Model\Schedule;

class Tracker
{
    protected $context;
    protected $queueFactory;
    protected $queueRepository;
    protected $trackRepository;
    protected $trackingQueueHelper;
    protected $orderRepository;
    protected $shipmentRepository;

    /**
     * Tracker constructor.
     * @param ModuleContext $context
     * @param \JulioReis\CorreiosFollowup\Model\Tracking\QueueFactory $queueFactory
     * @param \JulioReis\CorreiosFollowup\Model\Tracking\QueueRepository $queueRepository
     */
    public function __construct(
        ModuleContext $context,
        \JulioReis\CorreiosFollowup\Model\Tracking\QueueFactory $queueFactory,
        \JulioReis\CorreiosFollowup\Model\Tracking\QueueRepository $queueRepository,
        \Magento\Sales\Model\Order\Shipment\TrackRepository $trackRepository,
        \JulioReis\CorreiosFollowup\Helper\Tracking\Queue $trackingQueueHelper,
        \Magento\Sales\Api\OrderRepositoryInterface $orderRepository,
        \Magento\Sales\Model\Order\ShipmentRepository $shipmentRepository
    )
    {
        $this->context = $context;
        $this->queueFactory = $queueFactory;
        $this->queueRepository = $queueRepository;
        $this->trackRepository = $trackRepository;
        $this->trackingQueueHelper = $trackingQueueHelper;
        $this->orderRepository = $orderRepository;
        $this->shipmentRepository = $shipmentRepository;
    }

    /**
     * @param Schedule $schedule
     */
    public function execute(Schedule $schedule)
    {
        /** 1. iterate queue registers (registers from x days ago to now, and correios_status is not delivered) */
        $collection = $this->queueRepository->getPendingTracks();
        foreach ($collection as $queue) {
            $shipmentTrackId = $queue->getShipmentTrackId();
            $shipmentTrack = $this->trackRepository->get($shipmentTrackId);
            $trackNumber = $shipmentTrack->getTrackNumber();

            /** 2. search each register at the correios service */
            $trackingStatuses = $this->context->correiosService()->getTrackingStatuses($trackNumber);
            $liveStatusesQty = count($trackingStatuses);

            /** 3. if has any track update: (if not, do nothing) */
            if ($queue->getStatusesQty() == $liveStatusesQty) {
                continue;
            }

            /** 4. update queue register (update correios_status, statuses_qty, updated_at) */
            $trackingStatusToUpdate = array_shift($trackingStatuses);
            $queue->setCorreiosStatus($this->trackingQueueHelper->getCorreiosStatus($trackingStatusToUpdate[1]));
            $queue->setStatusesQty($liveStatusesQty);
            $this->queueRepository->save($queue);

            /** @todo 5. update sales_order status (possibly to delivered_to_customer if the order is delivered) */
            $this->processDeliveredOrderState($shipmentTrack->getOrderId());

            /** @todo 6. send email to customer, informing the new track status */

            /** 7. put the new status on delivery comment */
            $shipment = $this->shipmentRepository->get($shipmentTrack->getParentId());
            $shipment->addComment("Novo Status Correios: {$trackingStatusToUpdate[1]}", false, true);
            $this->shipmentRepository->save($shipment);
        }
    }

    protected function processDeliveredOrderState($orderId)
    {
        $status = 'customer_delivered';

        $order = $this->orderRepository->get($orderId);
        $order
            ->setState(\Magento\Sales\Model\Order::STATE_COMPLETE)
            ->setStatus($status)
            ->setData('is_updated', true)
            ->addStatusHistoryComment('Order delivered.', true);

        $this->orderRepository->save($order);
    }
}